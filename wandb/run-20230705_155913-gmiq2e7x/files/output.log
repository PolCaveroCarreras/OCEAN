wandb: WARNING Calling wandb.run.save without any arguments is deprecated.Changes to attributes are automatically persisted.
  0%|          | 1/478 [00:01<13:27,  1.69s/batch]
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
loss:0.69374018907547
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])

  1%|          | 4/478 [00:04<07:16,  1.09batch/s]
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
loss:nan
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
loss:nan
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])

  2%|▏         | 8/478 [00:06<04:26,  1.77batch/s]
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
loss:nan
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
loss:nan
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
loss:nan
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])

  3%|▎         | 13/478 [00:08<03:09,  2.45batch/s]
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
loss:nan
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
loss:nan
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
loss:nan
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
loss:nan
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])

  4%|▍         | 19/478 [00:10<02:52,  2.66batch/s]
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
loss:nan
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
loss:nan
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
loss:nan
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
loss:nan
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
loss:nan
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])

  5%|▌         | 24/478 [00:12<02:46,  2.72batch/s]
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
loss:nan
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
loss:nan
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
loss:nan
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
loss:nan
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])

  6%|▋         | 30/478 [00:14<02:37,  2.84batch/s]
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
loss:nan
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
loss:nan
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
loss:nan
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
loss:nan
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
loss:nan
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])

  7%|▋         | 34/478 [00:15<02:43,  2.72batch/s]
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
loss:nan
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
loss:nan
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
loss:nan
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
loss:nan
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])

  8%|▊         | 39/478 [00:17<02:38,  2.77batch/s]
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
loss:nan
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
loss:nan
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
loss:nan
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
loss:nan
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
loss:nan
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])

  9%|▉         | 45/478 [00:19<02:36,  2.77batch/s]
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
loss:nan
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
loss:nan
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
loss:nan
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
loss:nan
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])

 10%|█         | 50/478 [00:21<02:36,  2.73batch/s]
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
loss:nan
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
loss:nan
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
loss:nan
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
loss:nan
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
loss:nan
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])

 12%|█▏        | 56/478 [00:23<02:17,  3.06batch/s]
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
loss:nan
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
loss:nan
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
loss:nan
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
loss:nan
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
loss:nan
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])

 13%|█▎        | 63/478 [00:25<02:11,  3.16batch/s]
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
loss:nan
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
loss:nan
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
loss:nan
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
loss:nan
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
loss:nan
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
loss:nan
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])

 15%|█▍        | 70/478 [00:27<02:03,  3.31batch/s]
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
loss:nan
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
loss:nan
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
loss:nan
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
loss:nan
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
loss:nan
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])

 16%|█▌        | 76/478 [00:29<02:06,  3.19batch/s]
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
loss:nan
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
loss:nan
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
loss:nan
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
loss:nan
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
loss:nan
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
loss:nan
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])

 17%|█▋        | 82/478 [00:31<02:02,  3.24batch/s]
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
loss:nan
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
loss:nan
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
loss:nan
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
loss:nan
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
loss:nan
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
loss:nan
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])

 19%|█▊        | 89/478 [00:33<01:59,  3.25batch/s]
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
loss:nan
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
loss:nan
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
loss:nan
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
loss:nan
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
loss:nan
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
loss:nan
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])

 20%|██        | 96/478 [00:35<01:53,  3.37batch/s]
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
loss:nan
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
loss:nan
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
loss:nan
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
loss:nan
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
loss:nan
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
loss:nan
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])

 21%|██▏       | 102/478 [00:37<01:54,  3.28batch/s]
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
loss:nan
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
loss:nan
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
loss:nan
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
loss:nan
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
loss:nan
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
loss:nan
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])

 23%|██▎       | 109/478 [00:39<01:59,  3.09batch/s]
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
loss:nan
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
loss:nan
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
loss:nan
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
loss:nan
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
loss:nan
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])

 24%|██▍       | 115/478 [00:41<01:50,  3.29batch/s]
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
loss:nan
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
loss:nan
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
loss:nan
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
loss:nan
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
loss:nan
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
loss:nan
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])

 26%|██▌       | 122/478 [00:43<01:50,  3.23batch/s]
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
loss:nan
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
loss:nan
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
loss:nan
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
loss:nan
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
loss:nan
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])

 27%|██▋       | 128/478 [00:45<01:49,  3.18batch/s]
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
loss:nan
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
loss:nan
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
loss:nan
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
loss:nan
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
loss:nan
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
loss:nan
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])

 28%|██▊       | 135/478 [00:47<01:43,  3.30batch/s]
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
loss:nan
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
loss:nan
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
loss:nan
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
loss:nan
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
loss:nan
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
loss:nan
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])

 30%|██▉       | 142/478 [00:49<01:38,  3.42batch/s]
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
loss:nan
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
loss:nan
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
loss:nan
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])

 30%|███       | 145/478 [00:51<02:30,  2.21batch/s]
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
loss:nan
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
loss:nan
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
loss:nan
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
loss:nan
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
loss:nan
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])

 32%|███▏      | 152/478 [00:53<01:42,  3.19batch/s]
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
loss:nan
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
loss:nan
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
loss:nan
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
loss:nan
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
loss:nan
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
loss:nan
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])

 33%|███▎      | 158/478 [00:55<01:39,  3.21batch/s]
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
loss:nan
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
loss:nan
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
loss:nan
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
loss:nan
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
loss:nan
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
loss:nan
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])

 35%|███▍      | 165/478 [00:57<01:27,  3.56batch/s]
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
loss:nan
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
loss:nan
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
loss:nan
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
loss:nan
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
loss:nan
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
loss:nan
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])

 36%|███▌      | 172/478 [00:59<01:30,  3.39batch/s]
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
loss:nan
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
loss:nan
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
loss:nan
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
loss:nan
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
loss:nan
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
loss:nan
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])

 37%|███▋      | 179/478 [01:01<01:26,  3.48batch/s]
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
loss:nan
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
loss:nan
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
loss:nan
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
loss:nan
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
loss:nan
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
loss:nan
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])

 39%|███▉      | 186/478 [01:03<01:26,  3.39batch/s]
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
loss:nan
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
loss:nan
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
loss:nan
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
loss:nan
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
loss:nan
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
loss:nan
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])

 40%|████      | 193/478 [01:05<01:19,  3.60batch/s]
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
loss:nan
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
loss:nan
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
loss:nan
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
loss:nan
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
loss:nan
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
loss:nan
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])

 42%|████▏     | 200/478 [01:07<01:20,  3.44batch/s]
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
loss:nan
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
loss:nan
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
loss:nan
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
loss:nan
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
loss:nan
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])

 43%|████▎     | 206/478 [01:09<01:31,  2.98batch/s]
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
loss:nan
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
loss:nan
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
loss:nan
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
loss:nan
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
loss:nan
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
loss:nan
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])

 45%|████▍     | 213/478 [01:11<01:17,  3.40batch/s]
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
loss:nan
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
loss:nan
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
loss:nan
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
loss:nan
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
loss:nan
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])

 46%|████▌     | 219/478 [01:13<01:18,  3.32batch/s]
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
loss:nan
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
loss:nan
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
loss:nan
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
loss:nan
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
loss:nan
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
loss:nan
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])

 47%|████▋     | 225/478 [01:15<01:20,  3.13batch/s]
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
loss:nan
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
loss:nan
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
loss:nan
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
loss:nan
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
loss:nan
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])

 49%|████▊     | 232/478 [01:18<01:18,  3.12batch/s]
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
loss:nan
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
loss:nan
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
loss:nan
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
loss:nan
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
loss:nan
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])

 50%|████▉     | 238/478 [01:20<01:18,  3.07batch/s]
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
loss:nan
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
loss:nan
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
loss:nan
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
loss:nan
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
loss:nan
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])

 51%|█████     | 244/478 [01:21<01:18,  2.97batch/s]
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
loss:nan
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
loss:nan
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
loss:nan
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
loss:nan
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
loss:nan
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
loss:nan
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])

 52%|█████▏    | 250/478 [01:23<01:11,  3.18batch/s]
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
loss:nan
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
loss:nan
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
loss:nan
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
loss:nan
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
loss:nan
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
loss:nan
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])

 54%|█████▍    | 257/478 [01:25<01:02,  3.52batch/s]
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
loss:nan
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
loss:nan
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
loss:nan
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
loss:nan
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
loss:nan
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
loss:nan
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])

 55%|█████▌    | 263/478 [01:27<01:13,  2.94batch/s]
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
loss:nan
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
loss:nan
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
loss:nan
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
loss:nan
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
loss:nan
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])

 56%|█████▋    | 269/478 [01:29<01:07,  3.10batch/s]
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
loss:nan
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
loss:nan
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
loss:nan
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
loss:nan
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
loss:nan
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])

 58%|█████▊    | 276/478 [01:32<01:07,  2.98batch/s]
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
loss:nan
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
loss:nan
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
loss:nan
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
loss:nan
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
loss:nan
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])

 59%|█████▉    | 282/478 [01:33<00:59,  3.29batch/s]
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
loss:nan
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
loss:nan
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
loss:nan
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
loss:nan
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
loss:nan
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
loss:nan
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])

 60%|██████    | 289/478 [01:35<00:57,  3.32batch/s]
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
loss:nan
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
loss:nan
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
loss:nan
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
loss:nan
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
loss:nan
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
loss:nan
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])

 62%|██████▏   | 296/478 [01:38<00:56,  3.23batch/s]
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
loss:nan
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
loss:nan
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
loss:nan
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
loss:nan
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
loss:nan
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
loss:nan
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])

 63%|██████▎   | 303/478 [01:40<00:51,  3.43batch/s]
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
loss:nan
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
loss:nan
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
loss:nan
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
loss:nan
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
loss:nan
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
loss:nan
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
loss:nan
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])

 65%|██████▍   | 309/478 [01:41<00:50,  3.37batch/s]
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
loss:nan
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
loss:nan
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
loss:nan
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
loss:nan
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
loss:nan
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
loss:nan
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])

 66%|██████▌   | 316/478 [01:43<00:46,  3.50batch/s]
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
loss:nan
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
loss:nan
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
loss:nan
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
loss:nan
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
loss:nan
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
loss:nan
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])

 68%|██████▊   | 323/478 [01:45<00:44,  3.46batch/s]
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
loss:nan
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
loss:nan
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
loss:nan
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
loss:nan
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
loss:nan
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
loss:nan
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])

 69%|██████▉   | 330/478 [01:48<00:42,  3.47batch/s]
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
loss:nan
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
loss:nan
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
loss:nan
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
loss:nan
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
loss:nan
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
loss:nan
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])

 70%|███████   | 336/478 [01:49<00:47,  2.99batch/s]
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
loss:nan
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
loss:nan
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
loss:nan
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
loss:nan
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
loss:nan
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])

 72%|███████▏  | 343/478 [01:52<00:41,  3.25batch/s]
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
loss:nan
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
loss:nan
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
loss:nan
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
loss:nan
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
loss:nan
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
loss:nan
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])

 73%|███████▎  | 349/478 [01:53<00:38,  3.33batch/s]
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
loss:nan
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
loss:nan
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
loss:nan
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
loss:nan
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
loss:nan
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
loss:nan
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])

 74%|███████▍  | 356/478 [01:56<00:35,  3.40batch/s]
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
loss:nan
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
loss:nan
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
loss:nan
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
loss:nan
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
loss:nan
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
loss:nan
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])

 76%|███████▌  | 363/478 [01:58<00:32,  3.49batch/s]
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
loss:nan
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
loss:nan
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
loss:nan
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
loss:nan
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
loss:nan
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
loss:nan
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])

 77%|███████▋  | 370/478 [02:00<00:30,  3.54batch/s]
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
loss:nan
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
loss:nan
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
loss:nan
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
loss:nan
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
loss:nan
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
loss:nan
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])

 79%|███████▉  | 377/478 [02:02<00:28,  3.55batch/s]
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
loss:nan
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
loss:nan
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
loss:nan
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
loss:nan
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
loss:nan
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
loss:nan
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])

 80%|████████  | 384/478 [02:04<00:27,  3.39batch/s]
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
loss:nan
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
loss:nan
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
loss:nan
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
loss:nan
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
loss:nan
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
loss:nan
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])

 82%|████████▏ | 391/478 [02:06<00:26,  3.34batch/s]
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
loss:nan
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
loss:nan
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
loss:nan
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
loss:nan
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
loss:nan
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
loss:nan
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])

 83%|████████▎ | 398/478 [02:08<00:23,  3.43batch/s]
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
loss:nan
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
loss:nan
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
loss:nan
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
loss:nan
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
loss:nan
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
loss:nan
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])

 85%|████████▍ | 405/478 [02:10<00:21,  3.46batch/s]
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
loss:nan
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
loss:nan
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
loss:nan
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
loss:nan
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
loss:nan
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
loss:nan
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])

 86%|████████▌ | 412/478 [02:12<00:18,  3.49batch/s]
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
loss:nan
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
loss:nan
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
loss:nan
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
loss:nan
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
loss:nan
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
loss:nan
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])

 87%|████████▋ | 418/478 [02:14<00:18,  3.17batch/s]
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
loss:nan
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
loss:nan
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
loss:nan
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
loss:nan
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
loss:nan
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])

 89%|████████▉ | 425/478 [02:16<00:16,  3.27batch/s]
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
loss:nan
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
loss:nan
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
loss:nan
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
loss:nan
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
loss:nan
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
loss:nan
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])

 90%|█████████ | 431/478 [02:18<00:14,  3.28batch/s]
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
loss:nan
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
loss:nan
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
loss:nan
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
loss:nan
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
loss:nan
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])

 92%|█████████▏| 438/478 [02:20<00:12,  3.21batch/s]
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
loss:nan
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
loss:nan
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
loss:nan
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
loss:nan
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
loss:nan
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
loss:nan
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])

 93%|█████████▎| 444/478 [02:22<00:10,  3.21batch/s]
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
loss:nan
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
loss:nan
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
loss:nan
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
loss:nan
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
loss:nan
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])

 94%|█████████▍| 451/478 [02:24<00:08,  3.15batch/s]
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
loss:nan
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
loss:nan
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
loss:nan
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
loss:nan
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
loss:nan
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
loss:nan
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])

 96%|█████████▌| 457/478 [02:26<00:06,  3.23batch/s]
output:  torch.Size([128, 2])
loss:nan
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
loss:nan
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
loss:nan
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
loss:nan
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
loss:nan
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
loss:nan
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])

 97%|█████████▋| 464/478 [02:28<00:04,  3.23batch/s]
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
loss:nan
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
loss:nan
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
loss:nan
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
loss:nan
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
loss:nan
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
loss:nan
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])

 98%|█████████▊| 470/478 [02:30<00:02,  3.25batch/s]
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
loss:nan
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
loss:nan
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
loss:nan
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
loss:nan
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
loss:nan
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])

100%|██████████| 478/478 [02:32<00:00,  3.14batch/s]
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
loss:nan
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
loss:nan
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
loss:nan
input: torch.Size([28, 1, 36, 40])
labels:  torch.Size([28, 2])
input tensor PRE:  torch.Size([28, 1, 36, 40])
input tensor POST:  torch.Size([28, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([28, 1, 36, 40])
encoded_tensor.size: torch.Size([28, 10, 5, 5])
output:  torch.Size([28, 2])
loss:nan
Train Epoch 0 loss=nan acc=0.64
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
input tensor PRE:  torch.Size([83, 1, 36, 40])
input tensor POST:  torch.Size([83, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([83, 1, 36, 40])
encoded_tensor.size: torch.Size([83, 10, 5, 5])
Eval Epoch 0 loss=nan acc=0.64
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
input tensor PRE:  torch.Size([83, 1, 36, 40])
input tensor POST:  torch.Size([83, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([83, 1, 36, 40])
encoded_tensor.size: torch.Size([83, 10, 5, 5])
Test loss=nan acc=0.65