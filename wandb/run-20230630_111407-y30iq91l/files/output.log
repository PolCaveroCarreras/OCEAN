wandb: WARNING Calling wandb.run.save without any arguments is deprecated.Changes to attributes are automatically persisted.
  1%|          | 5/478 [00:01<02:38,  2.98batch/s]
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])

  2%|▏         | 11/478 [00:03<02:34,  3.02batch/s]
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])

  4%|▎         | 17/478 [00:05<02:39,  2.90batch/s]
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])

  5%|▍         | 23/478 [00:07<02:33,  2.97batch/s]
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])

  6%|▌         | 29/478 [00:09<02:27,  3.05batch/s]
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])

  7%|▋         | 35/478 [00:11<02:17,  3.23batch/s]
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])

  9%|▉         | 42/478 [00:13<02:13,  3.27batch/s]
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])

 10%|█         | 49/478 [00:15<02:02,  3.51batch/s]
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])

 12%|█▏        | 55/478 [00:17<02:07,  3.33batch/s]
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])

 13%|█▎        | 62/478 [00:19<02:05,  3.32batch/s]
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])

 14%|█▍        | 69/478 [00:21<02:02,  3.33batch/s]
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])

 16%|█▌        | 76/478 [00:23<01:57,  3.41batch/s]
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])

 17%|█▋        | 81/478 [00:25<01:58,  3.34batch/s]
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])

 18%|█▊        | 88/478 [00:27<01:56,  3.34batch/s]
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])

 20%|█▉        | 95/478 [00:29<01:51,  3.43batch/s]
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])

 21%|██▏       | 102/478 [00:31<01:47,  3.50batch/s]
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])

 23%|██▎       | 109/478 [00:33<01:52,  3.29batch/s]
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])

 24%|██▍       | 115/478 [00:35<01:54,  3.17batch/s]
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])

 26%|██▌       | 122/478 [00:37<01:49,  3.26batch/s]
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])

 27%|██▋       | 128/478 [00:39<01:48,  3.22batch/s]
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])

 28%|██▊       | 135/478 [00:41<01:45,  3.26batch/s]
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])

 29%|██▉       | 141/478 [00:43<01:43,  3.26batch/s]
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])

 31%|███       | 147/478 [00:45<01:42,  3.23batch/s]
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])

 32%|███▏      | 154/478 [00:47<01:39,  3.25batch/s]
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])

 33%|███▎      | 159/478 [00:49<01:58,  2.69batch/s]
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])

 35%|███▍      | 166/478 [00:51<01:37,  3.21batch/s]
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])

 36%|███▌      | 173/478 [00:53<01:32,  3.31batch/s]
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])

 37%|███▋      | 179/478 [00:55<01:40,  2.96batch/s]
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])

 39%|███▊      | 185/478 [00:57<01:29,  3.28batch/s]
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])

 40%|████      | 192/478 [00:59<01:28,  3.23batch/s]
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])

 42%|████▏     | 199/478 [01:01<01:25,  3.27batch/s]
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])

 43%|████▎     | 205/478 [01:03<01:23,  3.27batch/s]
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])

 44%|████▍     | 212/478 [01:05<01:21,  3.28batch/s]
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])

 46%|████▌     | 218/478 [01:07<01:18,  3.30batch/s]
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])

 47%|████▋     | 225/478 [01:09<01:19,  3.17batch/s]
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])

 48%|████▊     | 231/478 [01:11<01:16,  3.24batch/s]
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])

 50%|████▉     | 238/478 [01:13<01:12,  3.32batch/s]
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])

 51%|█████     | 244/478 [01:15<01:11,  3.25batch/s]
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])

 53%|█████▎    | 251/478 [01:17<01:09,  3.24batch/s]
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])

 54%|█████▍    | 257/478 [01:19<01:07,  3.29batch/s]
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])

 55%|█████▌    | 264/478 [01:21<01:05,  3.29batch/s]
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])

 57%|█████▋    | 271/478 [01:24<01:02,  3.31batch/s]
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])

 58%|█████▊    | 277/478 [01:25<01:00,  3.31batch/s]
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])

 59%|█████▉    | 283/478 [01:27<01:06,  2.95batch/s]
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])

 60%|██████    | 289/478 [01:29<00:57,  3.30batch/s]
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])

 62%|██████▏   | 296/478 [01:31<00:56,  3.23batch/s]
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])

 63%|██████▎   | 303/478 [01:33<00:53,  3.28batch/s]
output:  torch.Size([128, 2])
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])

 65%|██████▍   | 309/478 [01:35<00:53,  3.16batch/s]
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])

 66%|██████▌   | 316/478 [01:38<00:49,  3.31batch/s]
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])

 67%|██████▋   | 322/478 [01:39<00:46,  3.32batch/s]
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])

 69%|██████▉   | 329/478 [01:41<00:45,  3.30batch/s]
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])

 70%|███████   | 336/478 [01:44<00:43,  3.30batch/s]
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])

 72%|███████▏  | 342/478 [01:45<00:41,  3.28batch/s]
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])

 73%|███████▎  | 349/478 [01:48<00:39,  3.30batch/s]
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])

 74%|███████▍  | 355/478 [01:49<00:37,  3.31batch/s]
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])

 76%|███████▌  | 362/478 [01:51<00:35,  3.30batch/s]
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])

 77%|███████▋  | 369/478 [01:54<00:32,  3.32batch/s]
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])

 78%|███████▊  | 375/478 [01:55<00:31,  3.31batch/s]
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])

 80%|███████▉  | 382/478 [01:57<00:29,  3.23batch/s]
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])

 81%|████████  | 388/478 [01:59<00:27,  3.27batch/s]
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])

 83%|████████▎ | 395/478 [02:01<00:24,  3.33batch/s]
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])

 84%|████████▍ | 402/478 [02:04<00:22,  3.31batch/s]
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])

 85%|████████▌ | 408/478 [02:05<00:21,  3.27batch/s]
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])

 87%|████████▋ | 415/478 [02:08<00:19,  3.29batch/s]
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])

 88%|████████▊ | 421/478 [02:09<00:16,  3.36batch/s]
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])

 90%|████████▉ | 428/478 [02:11<00:15,  3.33batch/s]
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])

 91%|█████████ | 433/478 [02:13<00:16,  2.66batch/s]
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])

 92%|█████████▏| 440/478 [02:16<00:11,  3.36batch/s]
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])

 94%|█████████▎| 447/478 [02:18<00:09,  3.34batch/s]
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])

 95%|█████████▍| 453/478 [02:19<00:07,  3.36batch/s]
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])

 96%|█████████▌| 460/478 [02:22<00:05,  3.34batch/s]
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])

 98%|█████████▊| 467/478 [02:24<00:03,  3.47batch/s]
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])

 99%|█████████▉| 473/478 [02:25<00:01,  3.39batch/s]
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])

100%|██████████| 478/478 [02:27<00:00,  3.25batch/s]
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
input: torch.Size([28, 1, 36, 40])
labels:  torch.Size([28, 2])
input tensor PRE:  torch.Size([28, 1, 36, 40])
input tensor POST:  torch.Size([28, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([28, 1, 36, 40])
encoded_tensor.size: torch.Size([28, 10, 5, 5])
output:  torch.Size([28, 2])
Train Epoch 0 loss=nan acc=0.64
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
input tensor PRE:  torch.Size([83, 1, 36, 40])
input tensor POST:  torch.Size([83, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([83, 1, 36, 40])
encoded_tensor.size: torch.Size([83, 10, 5, 5])
Eval Epoch 0 loss=nan acc=0.65
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
input tensor PRE:  torch.Size([83, 1, 36, 40])
input tensor POST:  torch.Size([83, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([83, 1, 36, 40])
encoded_tensor.size: torch.Size([83, 10, 5, 5])
Test loss=nan acc=0.64