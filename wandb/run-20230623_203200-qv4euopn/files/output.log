size input:  tensor([[[[-5.0330e-01, -3.1476e-01, -5.4658e-01,  ..., -6.1928e-01,
           -6.1624e-01, -6.4937e-01],
          [-3.4013e-01, -2.8168e-01, -5.0697e-01,  ..., -4.5356e-01,
           -6.7823e-01, -6.7992e-01],
          [-4.6999e-01, -3.6108e-01, -4.6466e-01,  ..., -4.5597e-01,
           -8.1437e-01, -8.1903e-01],
          ...,
          [-2.6682e-01, -4.4588e-01, -3.1137e-01,  ..., -4.8768e-01,
           -5.5946e-01, -8.2567e-01],
          [-1.0897e-01, -1.2154e-02, -1.2333e-01,  ..., -5.5330e-01,
           -7.8458e-01, -9.5541e-01],
          [-1.0462e-01,  6.6203e-02, -1.0739e-01,  ..., -6.2835e-01,
           -6.2896e-01, -1.0000e+00]]],
        [[[-2.0184e-01,  7.4695e-03,  4.2883e-02,  ...,  7.3708e-02,
            7.7199e-02, -1.1563e-01],
          [-1.2309e-01,  7.2477e-02,  1.1810e-01,  ...,  7.3829e-02,
            2.7291e-01,  2.9451e-01],
          [-4.6344e-01, -2.7205e-01, -1.7895e-01,  ..., -8.9810e-02,
            3.1110e-01,  4.7289e-01],
          ...,
          [-6.7660e-01, -4.4547e-01, -2.9463e-01,  ...,  1.3794e-01,
           -3.8214e-02, -5.3924e-01],
          [-7.2635e-01, -7.6403e-01, -6.2349e-01,  ...,  1.5418e-01,
            7.0308e-02, -2.4799e-01],
          [-6.2007e-01, -4.9071e-01, -4.1932e-01,  ...,  2.7400e-02,
            1.9329e-01,  2.3985e-01]]],
        [[[-5.7736e-01, -1.4496e-01,  2.3726e-01,  ...,  6.5042e-01,
            8.4896e-01,  6.6389e-01],
          [-8.1071e-01, -2.3431e-01,  1.1432e-01,  ...,  6.1636e-01,
            7.6898e-01,  5.6089e-01],
          [-5.0285e-01, -2.0277e-01,  2.3691e-01,  ...,  7.4338e-01,
            9.2338e-01,  7.9712e-01],
          ...,
          [-5.3460e-01, -2.4788e-01, -1.9252e-01,  ...,  3.6213e-01,
            8.2450e-01,  6.2076e-01],
          [-7.8430e-01, -3.1765e-01, -1.6155e-01,  ...,  5.0161e-01,
            8.8815e-01,  7.4139e-01],
          [-8.4619e-01, -2.0901e-01,  7.5415e-02,  ...,  4.5764e-01,
            8.4482e-01,  7.9575e-01]]],
        ...,
        [[[-3.5107e-01, -2.1529e-01, -2.2866e-01,  ..., -1.7093e-02,
            3.7515e-03, -2.6138e-01],
          [-3.5345e-01, -7.5245e-02, -2.2366e-01,  ...,  7.4974e-02,
            3.1398e-01,  1.3265e-01],
          [-4.1015e-01, -1.1267e-01, -8.5139e-02,  ..., -9.0170e-02,
            3.1367e-01,  4.1119e-01],
          ...,
          [-9.9204e-01, -3.9151e-01, -2.4996e-02,  ..., -6.3409e-01,
           -4.6880e-01, -8.6734e-01],
          [-6.8510e-01, -2.5557e-01, -1.6774e-01,  ..., -7.9829e-01,
           -6.8267e-01, -6.9545e-01],
          [-2.5780e-01, -1.5255e-01, -3.8801e-01,  ..., -8.1259e-01,
           -9.2792e-01, -8.0117e-01]]],
        [[[ 3.8408e-02,  5.2191e-01,  7.8485e-01,  ..., -1.4234e-01,
           -1.8527e-01, -4.6039e-01],
          [ 1.7934e-01,  6.8616e-01,  8.9352e-01,  ...,  8.2449e-02,
           -2.3581e-01, -5.3364e-01],
          [ 1.6800e-01,  5.1825e-01,  7.8789e-01,  ...,  2.6952e-01,
           -1.7576e-01, -7.9514e-01],
          ...,
          [ 1.1865e-01,  5.1874e-01,  6.1294e-01,  ...,  3.7911e-02,
           -1.4686e-01, -6.4181e-01],
          [ 1.5970e-01,  5.1990e-01,  7.4726e-01,  ...,  1.2830e-01,
           -1.7654e-01, -5.4809e-01],
          [ 8.4102e-02,  3.9234e-01,  5.5997e-01,  ...,  1.7226e-01,
           -1.7981e-01, -4.8609e-01]]],
        [[[-4.7001e-01, -3.9676e-01, -3.3204e-01,  ..., -3.5290e-01,
           -1.5352e-01, -6.7457e-02],
          [-2.1279e-01, -1.9978e-01, -2.1856e-02,  ..., -2.2877e-01,
            1.1205e-01, -5.5134e-05],
          [-3.6437e-01, -2.3925e-01,  1.4350e-01,  ..., -7.7256e-02,
           -5.6984e-03, -2.1037e-01],
          ...,
          [-2.8060e-01,  7.0028e-03,  5.9603e-02,  ..., -3.3225e-01,
           -7.8269e-02,  1.6785e-01],
          [-3.5641e-01, -1.1929e-01,  3.1815e-02,  ..., -2.9405e-01,
           -1.4538e-01,  2.7143e-01],
          [-8.7582e-02,  1.0351e-01,  1.7285e-05,  ..., -6.3453e-01,
           -2.8866e-01,  2.7438e-01]]]])
tensor([[[[0.3182, 0.3041, 0.3108,  ..., 0.4834, 0.3637, 0.3041],
          [0.3041, 0.3041, 0.3041,  ..., 0.5654, 0.3766, 0.3041],
          [0.3091, 0.3140, 0.3377,  ..., 0.5382, 0.3746, 0.3041],
          ...,
          [0.3041, 0.3041, 0.3041,  ..., 0.5225, 0.3713, 0.3041],
          [0.3041, 0.3216, 0.3299,  ..., 0.5296, 0.3838, 0.3041],
          [0.3340, 0.3139, 0.3576,  ..., 0.4759, 0.3401, 0.3041]]],
        [[[0.3279, 0.3356, 0.3235,  ..., 0.3875, 0.3750, 0.4218],
          [0.3067, 0.3306, 0.3041,  ..., 0.4365, 0.3432, 0.4076],
          [0.3041, 0.3041, 0.3041,  ..., 0.4334, 0.3188, 0.3840],
          ...,
          [0.3041, 0.3041, 0.3041,  ..., 0.3935, 0.3727, 0.3522],
          [0.3041, 0.3041, 0.3041,  ..., 0.4190, 0.3820, 0.3645],
          [0.3041, 0.3041, 0.3041,  ..., 0.4137, 0.3988, 0.3887]]],
        [[[0.3392, 0.4368, 0.5620,  ..., 0.6027, 0.6192, 0.6099],
          [0.3067, 0.4578, 0.5929,  ..., 0.6676, 0.6655, 0.7156],
          [0.3101, 0.4776, 0.5704,  ..., 0.6618, 0.6394, 0.6831],
          ...,
          [0.3041, 0.4338, 0.5251,  ..., 0.7096, 0.6710, 0.7158],
          [0.3041, 0.4139, 0.5270,  ..., 0.7028, 0.6403, 0.7077],
          [0.3100, 0.3748, 0.5029,  ..., 0.6669, 0.6108, 0.6654]]],
        ...,
        [[[0.3200, 0.3115, 0.3293,  ..., 0.3750, 0.3348, 0.4266],
          [0.3041, 0.3041, 0.3109,  ..., 0.4083, 0.3537, 0.4522],
          [0.3041, 0.3041, 0.3041,  ..., 0.4252, 0.3284, 0.4115],
          ...,
          [0.3041, 0.3041, 0.3041,  ..., 0.5911, 0.3883, 0.3041],
          [0.3041, 0.3072, 0.3089,  ..., 0.5452, 0.4120, 0.3041],
          [0.3041, 0.3060, 0.3201,  ..., 0.5827, 0.3952, 0.3041]]],
        [[[0.5208, 0.6268, 0.6303,  ..., 0.5649, 0.4155, 0.3405],
          [0.5114, 0.7135, 0.7185,  ..., 0.6017, 0.4850, 0.3430],
          [0.5088, 0.7235, 0.6957,  ..., 0.6162, 0.5139, 0.3150],
          ...,
          [0.4009, 0.6346, 0.6969,  ..., 0.5555, 0.4910, 0.3410],
          [0.4804, 0.6571, 0.6863,  ..., 0.5823, 0.4714, 0.3560],
          [0.4560, 0.6413, 0.6360,  ..., 0.5697, 0.4812, 0.3523]]],
        [[[0.3176, 0.3271, 0.3850,  ..., 0.4532, 0.3319, 0.3419],
          [0.3178, 0.3517, 0.4261,  ..., 0.4234, 0.3191, 0.3448],
          [0.3152, 0.3704, 0.3948,  ..., 0.3498, 0.3070, 0.3175],
          ...,
          [0.3600, 0.3991, 0.4413,  ..., 0.3663, 0.3176, 0.3548],
          [0.3426, 0.4476, 0.4026,  ..., 0.4239, 0.3064, 0.3478],
          [0.3215, 0.4043, 0.3755,  ..., 0.4469, 0.3218, 0.3825]]]],
       grad_fn=<MaxPool2DWithIndicesBackward0>)
wandb: WARNING Calling wandb.run.save without any arguments is deprecated.Changes to attributes are automatically persisted.
  0%|          | 0/478 [00:00<?, ?batch/s]
Traceback (most recent call last):
  File "src/main.py", line 233, in <module>
    my_model = train_model(config)
  File "src/main.py", line 139, in train_model
    train_loss, train_acc = train_single_epoch(my_model, train_loader, optimizer)
  File "src/main.py", line 51, in train_single_epoch
    y_ = model(x, y)[0] #                   POL: AFEGIT [0]
  File "/home/usuaris/veu/pol.cavero/miniconda3/envs/ocean/lib/python3.8/site-packages/torch/nn/modules/module.py", line 1501, in _call_impl
    return forward_call(*args, **kwargs)
  File "/home/usuaris/veu/pol.cavero/OCEAN/src/DMHA.py", line 131, in forward
    embedding_0, alignment = self.poolingLayer(encoder_output)
  File "/home/usuaris/veu/pol.cavero/miniconda3/envs/ocean/lib/python3.8/site-packages/torch/nn/modules/module.py", line 1501, in _call_impl
    return forward_call(*args, **kwargs)
  File "/home/usuaris/veu/pol.cavero/OCEAN/src/poolings_original.py", line 152, in forward
    utteranceRepresentation, alignment = self.utteranceAttention(x)
  File "/home/usuaris/veu/pol.cavero/miniconda3/envs/ocean/lib/python3.8/site-packages/torch/nn/modules/module.py", line 1501, in _call_impl
    return forward_call(*args, **kwargs)
  File "/home/usuaris/veu/pol.cavero/OCEAN/src/poolings_original.py", line 130, in forward
    headsContextVectors = self.getHeadsContextVectors(ht)
  File "/home/usuaris/veu/pol.cavero/OCEAN/src/poolings_original.py", line 124, in getHeadsContextVectors
    key = ht.view(batch_size*ht.size(1), self.heads_number, self.head_size)
RuntimeError: shape '[1152, 5, 4]' is invalid for input of size 11520