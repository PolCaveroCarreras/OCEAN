input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
loss:nan
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
loss:nan
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
loss:nan
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
loss:nan
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
loss:nan
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
wandb: WARNING Calling wandb.run.save without any arguments is deprecated.Changes to attributes are automatically persisted.
  1%|▏         | 7/478 [00:02<02:19,  3.37batch/s]
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
loss:nan
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
loss:nan
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
loss:nan
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
loss:nan
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
loss:nan
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
loss:nan
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
loss:nan
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])

  3%|▎         | 14/478 [00:04<02:07,  3.63batch/s]
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
loss:nan
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
loss:nan
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
loss:nan
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
loss:nan
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
loss:nan
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
loss:nan
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
loss:nan
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])

  4%|▍         | 21/478 [00:06<02:10,  3.51batch/s]
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
loss:nan
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
loss:nan
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
loss:nan
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
loss:nan
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
loss:nan
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
loss:nan
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])


  7%|▋         | 35/478 [00:10<02:04,  3.56batch/s]
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
loss:nan
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
loss:nan
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
loss:nan
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
loss:nan
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
loss:nan
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
loss:nan
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])

input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
loss:nan
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
loss:nan
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
loss:nan
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
loss:nan
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
loss:nan
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
loss:nan
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
loss:nan
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])

 10%|█         | 50/478 [00:14<01:51,  3.84batch/s]
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
loss:nan
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
loss:nan
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
loss:nan
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
loss:nan
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
loss:nan
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
loss:nan
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
loss:nan
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])

 12%|█▏        | 58/478 [00:16<01:44,  4.01batch/s]
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
loss:nan
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
loss:nan
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
loss:nan
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
loss:nan
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
loss:nan
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
loss:nan
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
loss:nan
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])

 14%|█▍        | 66/478 [00:18<01:44,  3.94batch/s]
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
loss:nan
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
loss:nan
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
loss:nan
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
loss:nan
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
loss:nan
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
loss:nan
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
loss:nan
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])

 15%|█▌        | 73/478 [00:20<01:47,  3.76batch/s]
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
loss:nan
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
loss:nan
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
loss:nan
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
loss:nan
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
loss:nan
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
loss:nan
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
loss:nan
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])

 17%|█▋        | 81/478 [00:22<01:41,  3.90batch/s]
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
loss:nan
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
loss:nan
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
loss:nan
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
loss:nan
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
loss:nan
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
loss:nan
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
loss:nan
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])

 19%|█▊        | 89/478 [00:24<01:38,  3.95batch/s]
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
loss:nan
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
loss:nan
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
loss:nan
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
loss:nan
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
loss:nan
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
loss:nan
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
loss:nan
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])

 20%|██        | 96/478 [00:26<01:39,  3.83batch/s]
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
loss:nan
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
loss:nan
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
loss:nan
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
loss:nan
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
loss:nan
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
loss:nan
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
loss:nan
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])

 22%|██▏       | 104/478 [00:28<01:36,  3.86batch/s]
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
loss:nan
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
loss:nan
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
loss:nan
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
loss:nan
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
loss:nan
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
loss:nan
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
loss:nan
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])

 23%|██▎       | 112/478 [00:30<01:34,  3.89batch/s]
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
loss:nan
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
loss:nan
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
loss:nan
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
loss:nan
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
loss:nan
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
loss:nan
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
loss:nan
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])

 25%|██▍       | 119/478 [00:32<01:33,  3.84batch/s]
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
loss:nan
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
loss:nan
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
loss:nan
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
loss:nan
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
loss:nan
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
loss:nan
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
loss:nan
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])

 27%|██▋       | 127/478 [00:34<01:31,  3.83batch/s]
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
loss:nan
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
loss:nan
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
loss:nan
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
loss:nan
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
loss:nan
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
loss:nan
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
loss:nan
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])

 28%|██▊       | 135/478 [00:36<01:28,  3.88batch/s]
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
loss:nan
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
loss:nan
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
loss:nan
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
loss:nan
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
loss:nan
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
loss:nan
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
loss:nan
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])

 30%|██▉       | 142/478 [00:38<01:27,  3.86batch/s]
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
loss:nan
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
loss:nan
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
loss:nan
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
loss:nan
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
loss:nan
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
loss:nan
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
loss:nan
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])

 31%|███       | 148/478 [00:39<01:25,  3.86batch/s]
loss:nan
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
loss:nan
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
loss:nan
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
loss:nan
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
loss:nan
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
loss:nan
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
loss:nan
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
loss:nan
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])

input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
loss:nan
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
loss:nan
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
loss:nan
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
loss:nan
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
loss:nan
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
loss:nan
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
loss:nan
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])

 34%|███▍      | 164/478 [00:43<01:22,  3.83batch/s]
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
loss:nan
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
loss:nan
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
loss:nan
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
loss:nan
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
loss:nan
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
loss:nan
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
loss:nan
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])

 36%|███▌      | 171/478 [00:45<01:19,  3.85batch/s]
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
loss:nan
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
loss:nan
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
loss:nan
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
loss:nan
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
loss:nan
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
loss:nan
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
loss:nan
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])

 37%|███▋      | 179/478 [00:47<01:17,  3.86batch/s]
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
loss:nan
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
loss:nan
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
loss:nan
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
loss:nan
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
loss:nan
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
loss:nan
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
loss:nan
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])

 39%|███▉      | 187/478 [00:49<01:15,  3.87batch/s]
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
loss:nan
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
loss:nan
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
loss:nan
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
loss:nan
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
loss:nan
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
loss:nan
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
loss:nan
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])

 41%|████      | 194/478 [00:51<01:13,  3.88batch/s]
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
loss:nan
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
loss:nan
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
loss:nan
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
loss:nan
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
loss:nan
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
loss:nan
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
loss:nan
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])

 42%|████▏     | 202/478 [00:53<01:11,  3.84batch/s]
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
loss:nan
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
loss:nan
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
loss:nan
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
loss:nan
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
loss:nan
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
loss:nan
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])

 44%|████▍     | 210/478 [00:55<01:10,  3.80batch/s]
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
loss:nan
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
loss:nan
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
loss:nan
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
loss:nan
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
loss:nan
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
loss:nan
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
loss:nan
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])

 45%|████▌     | 217/478 [00:57<01:08,  3.82batch/s]
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
loss:nan
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
loss:nan
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
loss:nan
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
loss:nan
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
loss:nan
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
loss:nan
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
loss:nan
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])

 47%|████▋     | 225/478 [00:59<01:05,  3.86batch/s]
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
loss:nan
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
loss:nan
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
loss:nan
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
loss:nan
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
loss:nan
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
loss:nan
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])

 50%|█████     | 241/478 [01:03<01:01,  3.87batch/s]
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
loss:nan
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
loss:nan
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
loss:nan
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
loss:nan
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
loss:nan
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
loss:nan
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
loss:nan
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
loss:nan
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
loss:nan
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
loss:nan
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
loss:nan
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
loss:nan
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
loss:nan
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
loss:nan
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
loss:nan
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])

 52%|█████▏    | 248/478 [01:05<01:01,  3.75batch/s]
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
loss:nan
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
loss:nan
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
loss:nan
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
loss:nan
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
loss:nan
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
loss:nan
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
loss:nan
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])

 54%|█████▎    | 256/478 [01:07<00:58,  3.79batch/s]
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
loss:nan
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
loss:nan
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
loss:nan
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
loss:nan
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
loss:nan
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
loss:nan
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
loss:nan
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])

 55%|█████▌    | 264/478 [01:09<00:55,  3.87batch/s]
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
loss:nan
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
loss:nan
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
loss:nan
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
loss:nan
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
loss:nan
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
loss:nan
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
loss:nan
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])

 57%|█████▋    | 271/478 [01:11<00:53,  3.89batch/s]
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
loss:nan
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
loss:nan
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
loss:nan
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
loss:nan
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
loss:nan
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
loss:nan
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
loss:nan
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])

 58%|█████▊    | 279/478 [01:13<00:51,  3.83batch/s]
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
loss:nan
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
loss:nan
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
loss:nan
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
loss:nan
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
loss:nan
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
loss:nan
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
loss:nan
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])

 60%|██████    | 287/478 [01:15<00:49,  3.85batch/s]
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
loss:nan
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
loss:nan
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
loss:nan
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
loss:nan
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
loss:nan
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
loss:nan
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
loss:nan
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])

 62%|██████▏   | 294/478 [01:17<00:47,  3.86batch/s]
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
loss:nan
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
loss:nan
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
loss:nan
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
loss:nan
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
loss:nan
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
loss:nan
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
loss:nan
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])

 63%|██████▎   | 302/478 [01:19<00:46,  3.80batch/s]
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
loss:nan
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
loss:nan
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
loss:nan
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
loss:nan
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
loss:nan
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
loss:nan
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
loss:nan
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])

 65%|██████▍   | 310/478 [01:21<00:44,  3.81batch/s]
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
loss:nan
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
loss:nan
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
loss:nan
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
loss:nan
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
loss:nan
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
loss:nan
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
loss:nan
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])

 66%|██████▋   | 317/478 [01:23<00:41,  3.84batch/s]
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
loss:nan
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
loss:nan
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
loss:nan
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
loss:nan
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
loss:nan
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
loss:nan
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
loss:nan
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])

 68%|██████▊   | 325/478 [01:25<00:39,  3.86batch/s]
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
loss:nan
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
loss:nan
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
loss:nan
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
loss:nan
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
loss:nan
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
loss:nan
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
loss:nan
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])

 70%|██████▉   | 333/478 [01:27<00:37,  3.87batch/s]
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
loss:nan
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
loss:nan
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
loss:nan
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
loss:nan
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
loss:nan
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
loss:nan
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
loss:nan
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])

 71%|███████▏  | 341/478 [01:29<00:35,  3.86batch/s]
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
loss:nan
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
loss:nan
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
loss:nan
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
loss:nan
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
loss:nan
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
loss:nan
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
loss:nan
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])

 73%|███████▎  | 348/478 [01:31<00:33,  3.84batch/s]
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
loss:nan
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
loss:nan
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
loss:nan
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
loss:nan
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
loss:nan
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
loss:nan
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
loss:nan
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])

 74%|███████▍  | 356/478 [01:33<00:31,  3.85batch/s]
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
loss:nan
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
loss:nan
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
loss:nan
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
loss:nan
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
loss:nan
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
loss:nan
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
loss:nan
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])

 76%|███████▌  | 364/478 [01:35<00:29,  3.85batch/s]
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
loss:nan
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
loss:nan
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
loss:nan
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
loss:nan
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
loss:nan
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
loss:nan
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
loss:nan
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])

 78%|███████▊  | 372/478 [01:37<00:27,  3.86batch/s]
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
loss:nan
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
loss:nan
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
loss:nan
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
loss:nan
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
loss:nan
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
loss:nan
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
loss:nan
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])

 79%|███████▉  | 379/478 [01:39<00:25,  3.83batch/s]
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
loss:nan
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
loss:nan
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
loss:nan
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
loss:nan
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
loss:nan
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
loss:nan
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
loss:nan
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])

 81%|████████  | 387/478 [01:41<00:23,  3.92batch/s]
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
loss:nan
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
loss:nan
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
loss:nan
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
loss:nan
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
loss:nan
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
loss:nan
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
loss:nan
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])

 83%|████████▎ | 395/478 [01:43<00:21,  3.86batch/s]
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
loss:nan
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
loss:nan
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
loss:nan
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
loss:nan
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
loss:nan
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
loss:nan
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
loss:nan
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])

 84%|████████▍ | 403/478 [01:46<00:19,  3.86batch/s]
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
loss:nan
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
loss:nan
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
loss:nan
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
loss:nan
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
loss:nan
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
loss:nan
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
loss:nan
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])

 86%|████████▌ | 410/478 [01:47<00:17,  3.89batch/s]
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
loss:nan
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
loss:nan
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
loss:nan
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
loss:nan
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
loss:nan
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
loss:nan
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
loss:nan
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])

 87%|████████▋ | 418/478 [01:49<00:15,  3.90batch/s]
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
loss:nan
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
loss:nan
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
loss:nan
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
loss:nan
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
loss:nan
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
loss:nan
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
loss:nan
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])

 89%|████████▉ | 426/478 [01:51<00:12,  4.08batch/s]
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
loss:nan
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
loss:nan
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
loss:nan
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
loss:nan
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
loss:nan
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
loss:nan
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
loss:nan
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])

 91%|█████████ | 434/478 [01:53<00:11,  3.98batch/s]
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
loss:nan
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
loss:nan
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
loss:nan
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
loss:nan
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
loss:nan
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
loss:nan
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
loss:nan
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])

 92%|█████████▏| 442/478 [01:55<00:09,  3.94batch/s]
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
loss:nan
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
loss:nan
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
loss:nan
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
loss:nan
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
loss:nan
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
loss:nan
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
loss:nan
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])

 94%|█████████▍| 450/478 [01:58<00:07,  3.98batch/s]
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
loss:nan
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
loss:nan
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
loss:nan
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
loss:nan
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
loss:nan
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
loss:nan
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
loss:nan
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])

 96%|█████████▌| 457/478 [01:59<00:05,  3.87batch/s]
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
loss:nan
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
loss:nan
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
loss:nan
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
loss:nan
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
loss:nan
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
loss:nan
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
loss:nan
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])

 97%|█████████▋| 465/478 [02:01<00:03,  3.82batch/s]
output:  torch.Size([128, 2])
loss:nan
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
loss:nan
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
loss:nan
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
loss:nan
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
loss:nan
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
loss:nan
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
loss:nan
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])

 99%|█████████▉| 473/478 [02:04<00:01,  3.80batch/s]
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
loss:nan
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
loss:nan
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
loss:nan
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
loss:nan
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
loss:nan
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
loss:nan
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
loss:nan
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])

100%|██████████| 478/478 [02:05<00:00,  3.82batch/s]
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
loss:nan
input: torch.Size([128, 1, 36, 40])
labels:  torch.Size([128, 2])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
output:  torch.Size([128, 2])
loss:nan
input: torch.Size([28, 1, 36, 40])
labels:  torch.Size([28, 2])
input tensor PRE:  torch.Size([28, 1, 36, 40])
input tensor POST:  torch.Size([28, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([28, 1, 36, 40])
encoded_tensor.size: torch.Size([28, 10, 5, 5])
output:  torch.Size([28, 2])
loss:nan
Train Epoch 0 loss=nan acc=0.64
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
input tensor PRE:  torch.Size([83, 1, 36, 40])
input tensor POST:  torch.Size([83, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([83, 1, 36, 40])
encoded_tensor.size: torch.Size([83, 10, 5, 5])
Eval Epoch 0 loss=nan acc=0.65
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
input tensor PRE:  torch.Size([128, 1, 36, 40])
input tensor POST:  torch.Size([128, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([128, 1, 36, 40])
encoded_tensor.size: torch.Size([128, 10, 5, 5])
input tensor PRE:  torch.Size([83, 1, 36, 40])
input tensor POST:  torch.Size([83, 36, 1, 40])
input tensor AFTER TRANSPOSE:  torch.Size([83, 1, 36, 40])
encoded_tensor.size: torch.Size([83, 10, 5, 5])
Test loss=nan acc=0.63